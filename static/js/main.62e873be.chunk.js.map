{"version":3,"sources":["js/Home.js","js/Menu.js","js/Tile.js","js/Row.js","js/Map.js","js/Tourney.js","App.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","createName","createPassword","manageName","managePassword","updateCreateName","bind","assertThisInitialized","updateCreatePassword","updateManageName","updateManagePassword","createTourney","manageTourney","manageEnter","createEnter","socket","on","data","history","push","event","setState","target","value","console","log","alert","emit","name","password","key","react_default","a","createElement","className","type","onInput","onKeyPress","onClick","React","Component","Menu","input","messages","mounted","copy","slice","unshift","message","length","pop","getInfo","typeChange","titleChange","infoChange","highlightChange","getMessages","handleKey","handleInput","e","updateTile","row","col","info","highlight","title","onChange","i","Tile","handleClick","click","handleDrop","drop","handleDrag","handleDragOver","getStyle","toggleTimer","resetTimer","getTime","checkID","time","dataTransfer","setData","getAttribute","preventDefault","backgroundColor","min","Math","floor","sec","extra","data-row","data-col","crow","ccol","draggable","onDragOver","onDragStart","onDrop","id","style","Row","createRow","tiles","map","js_Tile","Map","createRows","rows","js_Row","Tourney","atob","updateMap","Array","fill","menu","newMap","r1","parseInt","getData","c1","r2","c2","temp","vals","b","c","d","js_Menu","js_Map","io","myHome","_ref","js_Home","myTourney","_ref2","match","js_Tourney","params","App","BrowserRouter","Switch","Route","path","component","Redirect","to","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.62e873be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      createName: '',\r\n      createPassword: '',\r\n      manageName: '',\r\n      managePassword: ''\r\n    }\r\n    this.updateCreateName = this.updateCreateName.bind(this);\r\n    this.updateCreatePassword = this.updateCreatePassword.bind(this);\r\n    this.updateManageName = this.updateManageName.bind(this);\r\n    this.updateManagePassword = this.updateManagePassword.bind(this);\r\n    this.createTourney = this.createTourney.bind(this);\r\n    this.manageTourney = this.manageTourney.bind(this);\r\n    this.manageEnter = this.manageEnter.bind(this);\r\n    this.createEnter = this.createEnter.bind(this);\r\n\r\n    props.socket.on('tourney', function(data) {\r\n      props.history.push('/tourneymap/tourney/' + data);\r\n    })\r\n  }\r\n\r\n  updateCreateName(event) {\r\n    this.setState({createName: event.target.value});\r\n    console.log(this.state);\r\n  }\r\n\r\n  updateCreatePassword(event) {\r\n    this.setState({createPassword: event.target.value});\r\n    console.log(this.state);\r\n  }\r\n\r\n  updateManageName(event) {\r\n    this.setState({manageName: event.target.value});\r\n    console.log(this.state);\r\n  }\r\n\r\n  updateManagePassword(event) {\r\n    this.setState({managePassword: event.target.value});\r\n    console.log(this.state);\r\n  }\r\n\r\n  createTourney() {\r\n    if (this.state.createName === '' || this.state.createPassword === '') {\r\n      alert('Fill in all fields!');\r\n    } else {\r\n      this.props.socket.emit('create tourney',\r\n        {name: this.state.createName, password: this.state.createPassword});\r\n    }\r\n  }\r\n\r\n  manageTourney() {\r\n    if (this.state.manageName === '' || this.state.managePassword === '') {\r\n      alert('Fill in all fields!');\r\n    } else {\r\n      this.props.socket.emit('manage tourney',\r\n        {name: this.state.manageName, password: this.state.managePassword});\r\n    }\r\n  }\r\n\r\n  manageEnter(event) {\r\n    if (event.key == \"Enter\")\r\n      this.manageTourney();\r\n  }\r\n\r\n  createEnter(event) {\r\n    if (event.key == \"Enter\")\r\n      this.createTourney();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"home-box\">\r\n          <p className=\"home-title\">{\"Tourney Map\"}</p>\r\n          <div className=\"home-create\">\r\n            <p className=\"home-text\">Name:</p>\r\n            <input className=\"home-input\" type=\"text\" onInput={this.updateCreateName} />\r\n            <p className=\"home-text\">Password:</p>\r\n            <input className=\"home-input\" type=\"password\" onInput={this.updateCreatePassword}\r\n              onKeyPress={this.createEnter}/>\r\n            <button className=\"home-create-button\" onClick={this.createTourney}> Create Tourney </button>\r\n          </div>\r\n          <div className=\"home-manage\">\r\n            <p className=\"home-text\">Name:</p>\r\n            <input className=\"home-input\" type=\"text\" onInput={this.updateManageName} />\r\n            <p className=\"home-text\">Password:</p>\r\n            <input className=\"home-input\" type=\"password\" onInput={this.updateManagePassword}\r\n              onKeyPress={this.manageEnter}/>\r\n            <button className=\"home-manage-button\" onClick={this.manageTourney}> Manage Tourney </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nclass Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: \"\",\r\n      messages: []\r\n    };\r\n\r\n    props.socket.on(\"receive message\", function(data) {\r\n      if (this.mounted) {\r\n        let copy = this.state.messages.slice();\r\n        copy.unshift(data.message);\r\n        if (copy.length > 8) {\r\n          copy.pop();\r\n        }\r\n        this.setState({messages: copy});\r\n      }\r\n    }.bind(this));\r\n\r\n    this.getInfo = this.getInfo.bind(this);\r\n\r\n    this.typeChange = this.typeChange.bind(this);\r\n    this.titleChange = this.titleChange.bind(this);\r\n    this.infoChange = this.infoChange.bind(this);\r\n    this.highlightChange = this.highlightChange.bind(this);\r\n    this.getMessages = this.getMessages.bind(this);\r\n    this.handleKey = this.handleKey.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  titleChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, this.props.type, e.target.value,\r\n      this.props.info, this.props.highlight);\r\n  }\r\n\r\n  typeChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, e.target.value, this.props.title,\r\n      \"\", this.props.highlight);\r\n  }\r\n\r\n  infoChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, this.props.type, this.props.title,\r\n      e.target.value, this.props.highlight);\r\n  }\r\n\r\n  highlightChange(e) {\r\n    this.props.updateTile(this.props.row, this.props.col, this.props.type, this.props.title,\r\n      this.props.info, e.target.value);\r\n  }\r\n\r\n  getInfo() {\r\n    if (this.props.type === \"text\") {\r\n      return (\r\n        <div>\r\n          <p className=\"menu-text\">Info:</p>\r\n          <input type=\"text\" value={this.props.info} onChange={this.infoChange}/>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  getMessages() {\r\n    let list = []\r\n    let messages = [];\r\n    for (let i = this.state.messages.length - 1; i >= 0; i--) {\r\n      messages.push(<hr className=\"chat-line\" key={-i - 1}/>);\r\n      messages.push(<li className=\"chat-text\" key={i}>{this.state.messages[i]}</li>);\r\n    }\r\n    list.push(<ul>{messages}</ul>);\r\n    return messages;\r\n  }\r\n\r\n  handleKey(event) {\r\n    if (event.key == 'Enter' && this.state.input != \"\") {\r\n      this.props.socket.emit(\"send message\", {name: this.props.name, message: this.state.input});\r\n      this.setState({input: \"\"});\r\n    }\r\n  }\r\n\r\n  handleInput(e) {\r\n    this.setState({input: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney-menu\">\r\n        <div className=\"tourney-name\">{this.props.name}</div>\r\n        <div>\r\n          <p className=\"menu-text\">Type:</p>\r\n          <select value={this.props.type} onChange={this.typeChange}>\r\n            <option value=\"\">Blank</option>\r\n            <option value=\"text\">Text</option>\r\n            <option value=\"timer\">Timer</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <p className=\"menu-text\">Title:</p>\r\n          <input type=\"text\" value={this.props.title} onChange={this.titleChange}/>\r\n        </div>\r\n        <div>{this.getInfo()}</div>\r\n        <div>\r\n          <p className=\"menu-text\">Highlight:</p>\r\n          <select value={this.props.highlight} onChange={this.highlightChange}>\r\n            <option value=\"\">None</option>\r\n            <option value=\"red\">Red</option>\r\n            <option value=\"green\">Green</option>\r\n            <option value=\"blue\">Blue</option>\r\n            <option value=\"yellow\">Yellow</option>\r\n            <option value=\"orange\">Orange</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"chat-box\">\r\n          <div>{this.getMessages()}</div>\r\n          <div>\r\n            <p className=\"menu-text\">Chat:</p>\r\n            <input type=\"text\" value={this.state.input}\r\n              onChange={this.handleInput} onKeyPress={this.handleKey}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.row = props.row;\n    this.col = props.col;\n    this.handleClick = props.click;\n    this.handleDrop = props.drop;\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragOver = this.handleDragOver.bind(this);\n    this.getStyle = this.getStyle.bind(this);\n    this.getInfo = this.getInfo.bind(this);\n    this.toggleTimer = this.toggleTimer.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.getTime = this.getTime.bind(this);\n    this.checkID = this.checkID.bind(this);\n\n    this.state = {\n      time: 0\n    };\n\n    props.socket.on('update timer', function(data) {\n      let key = \"\" + this.row + props.name + this.col;\n      console.log(key);\n      console.log(data.key);\n      if (key === data.key) {\n        console.log(\"gotem\");\n        this.setState({time: data.time})\n      }\n    }.bind(this));\n  }\n\n  handleDrag(e) {\n    e.dataTransfer.setData(\"row\", e.target.getAttribute(\"data-row\"));\n    e.dataTransfer.setData(\"col\", e.target.getAttribute(\"data-col\"));\n  }\n\n  handleDragOver(e) {\n    e.preventDefault();\n  }\n\n  getStyle() {\n    if (this.props.highlight === \"red\") {\n      return {\n        backgroundColor: \"#f44242\"\n      };\n    } else if (this.props.highlight === \"green\") {\n      return {\n        backgroundColor: \"#42f442\"\n      };\n    } else if (this.props.highlight === \"blue\") {\n      return {\n        backgroundColor: \"#427cf4\"\n      };\n    } else if (this.props.highlight === \"yellow\") {\n      return {\n        backgroundColor: \"#f4f442\"\n      };\n    } else if (this.props.highlight === \"orange\") {\n      return {\n        backgroundColor: \"#f47a42\"\n      };\n    }\n  }\n\n  toggleTimer() {\n    this.props.socket.emit(\"toggle timer\", {name: this.props.name, row: this.row, col: this.col});\n  }\n\n  resetTimer() {\n    this.props.socket.emit(\"reset timer\", {name: this.props.name, row: this.row, col: this.col});\n  }\n\n  getTime() {\n    let min = Math.floor(this.state.time / 60);\n    let sec = this.state.time % 60;\n    let extra = \"\";\n    if (sec < 10) {\n      extra = 0;\n    }\n    return \"\" + min + \":\" + extra + sec;\n  }\n\n  getInfo() {\n    if (this.props.type === \"timer\") {\n      return (\n        <div data-row={this.row} data-col={this.col}>\n          {this.getTime()}\n          <div>\n            <button data-row={this.row} data-col={this.col}\n              className=\"timer-button\" type=\"button\" onClick={this.toggleTimer}>S/P</button>\n            <button data-row={this.row} data-col={this.col}\n              className=\"timer-button\" type=\"button\" onClick={this.resetTimer}>R</button>\n          </div>\n        </div>\n      );\n    } else {\n      return this.props.info;\n    }\n  }\n\n  checkID() {\n    if (this.row == this.props.crow && this.col == this.props.ccol) {\n      return \"selected\";\n    }\n    return \"\";\n  }\n\n  render() {\n    return (\n      <div onClick={this.handleClick} data-row={this.row} data-col={this.col} draggable=\"true\" onDragOver={this.handleDragOver}\n        onDragStart={this.handleDrag} onDrop={this.handleDrop} className=\"grid-tile\" id={this.checkID()} style={this.getStyle()}>\n        <div className=\"tile-title\" data-row={this.row} data-col={this.col}>\n          {this.props.title}\n        </div>\n        <div data-row={this.row} data-col={this.col}>\n          {this.getInfo()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Tile\n","import React from 'react';\r\nimport Tile from './Tile.js';\r\n\r\nclass Row extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.createRow = this.createRow.bind(this);\r\n  }\r\n\r\n  createRow() {\r\n    let tiles = []\r\n    let row = this.props.row;\r\n    let map = this.props.map;\r\n    for (let i = 0; i < 18; i++) {\r\n      tiles.push(<Tile key={i} crow={this.props.crow} ccol={this.props.ccol}\r\n        name={this.props.name} socket={this.props.socket}\r\n          row={row} col={i} type={map[row][i][0]} title={map[row][i][1]}\r\n            info={map[row][i][2]} highlight={map[row][i][3]}\r\n            click={this.props.handleClick} drop={this.props.handleDrop} />);\r\n    }\r\n    return tiles;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"grid-row\">\r\n        {this.createRow()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React from 'react';\r\nimport Row from './Row.js'\r\n\r\nclass Map extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.map = props.map;\r\n    this.createRows = this.createRows.bind(this);\r\n  }\r\n\r\n  createRows() {\r\n    let rows = []\r\n    for (let i = 0; i < 10; i++) {\r\n      rows.push(<Row key={i} crow={this.props.crow} ccol={this.props.ccol}\r\n        name={this.props.name} socket={this.props.socket}\r\n          handleClick={this.props.handleClick} handleDrop={this.props.handleDrop}\r\n            map={this.props.map} row={i} />);\r\n    }\r\n    return rows;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney-display\">\r\n        <div className=\"tourney-grid\">\r\n          {this.createRows()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map\r\n","import React from 'react';\r\nimport Menu from './Menu.js';\r\nimport Map from './Map.js';\r\n\r\nclass Tourney extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = atob(props.id);\r\n    this.updateMap = this.updateMap.bind(this);\r\n    this.updateTile = this.updateTile.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.state = {\r\n      map: new Array(10).fill(new Array(18).fill([\"\", \"\", \"\", \"\"])),\r\n      menu: [\"\", \"\", \"\", \"\"],\r\n      row: 0,\r\n      col: 0\r\n    };\r\n\r\n    props.socket.emit('get tourney', {name: this.id});\r\n\r\n    props.socket.on('load tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.updateMap(data.map);\r\n      }\r\n    }.bind(this));\r\n\r\n    props.socket.on('update tourney', function(data) {\r\n      if (this.mounted) {\r\n        console.log(data);\r\n        this.updateMap(data.map);\r\n      }\r\n    }.bind(this));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateMap(newMap) {\r\n    this.setState({map: newMap});\r\n  }\r\n\r\n  updateTile(row, col, type, title, info, highlight) {\r\n    let copy = this.state.map.slice();\r\n    copy[row][col] = [type, title, info, highlight];\r\n    this.setState({map: copy, menu: copy[row][col]});\r\n    this.props.socket.emit(\"map tile\", {id: this.id, row: row, col: col, type: type, title: title, info: info, highlight: highlight});\r\n  }\r\n\r\n  handleDrop(e) {\r\n    e.preventDefault();\r\n    let r1 = parseInt(e.dataTransfer.getData(\"row\"));\r\n    let c1 = parseInt(e.dataTransfer.getData(\"col\"));\r\n    let r2 = e.target.getAttribute(\"data-row\");\r\n    let c2 = e.target.getAttribute(\"data-col\");\r\n    let temp = this.state.map[r1][c1];\r\n    let copy = this.state.map.slice();\r\n    copy[r1][c1] = copy[r2][c2];\r\n    copy[r2][c2] = temp;\r\n    this.updateMap(copy);\r\n    let vals = this.state.map[r2][c2];\r\n    this.setState({map: copy, menu: vals, row: r2, col: c2});\r\n    console.log(\"switched!\");\r\n    this.props.socket.emit(\"map switch\", {id: this.id, a: r1, b: c1, c: r2, d:c2});\r\n  }\r\n\r\n  handleClick(e) {\r\n    let row = e.target.getAttribute(\"data-row\");\r\n    let col = e.target.getAttribute(\"data-col\");\r\n    if (row != null && col != null) {\r\n      let vals = this.state.map[row][col];\r\n      this.setState({menu: vals, row: row, col: col});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tourney\">\r\n        <Menu name={this.id} type={this.state.menu[0]} socket={this.props.socket}\r\n          title={this.state.menu[1]} info={this.state.menu[2]} highlight={this.state.menu[3]}\r\n            row={this.state.row} col={this.state.col} updateTile={this.updateTile} />\r\n        <div>\r\n          <Map crow={this.state.row} ccol={this.state.col} name={this.id}\r\n            socket={this.props.socket} map={this.state.map}\r\n              handleDrop={this.handleDrop} handleClick={this.handleClick} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tourney;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Home from './js/Home.js';\nimport Tourney from './js/Tourney.js';\nimport io from 'socket.io-client';\n//let socket = io(\"localhost:5000\")\nlet socket = io(\"https://tourney-map.herokuapp.com\");\n\nsocket.on('warning', function(data) {\n  alert(data);\n});\n\nconst myHome = ({history}) => {\n  return (\n    <Home history={history} socket={socket} />\n  );\n}\n\nconst myTourney = ({match}) => {\n  return (\n    <Tourney id={match.params.id} socket={socket} />\n  );\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/tourneymap/home\" component={myHome} />\n            <Route path='/tourneymap/tourney/:id' component={myTourney} />\n            <Route path=\"/tourneymap\" component={myHome} />\n            <Redirect to=\"/tourneymap/home\" />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}